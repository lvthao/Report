KVM vs Xen-based solution (Xen/XCP/XenServer)
	-KVM: 
	-Xen:
compare openstack and vmware : 
	1. design :
	With so many companies devoting resources to OpenStack it has no dependencies to a single company
	VM:excellent documentation and an easy-to-use interface for deployment 
	open:no slouch here
	2. feature:
  	+ Vmotion / openstack live migration : support share storage and not share storage 
  	+ VMware DSR ( Distributed Resource Scheduler) / openstack scheduler
  	+ VMware HA / openstack HA(heat) (HA at vm)
  	+VMware FT / OP FT

KVM:
	KVM needs QEMU to provide full hypervisor functionality. By itself, KVM is more of a virtualization infrastructure provider
	type-1 hypervisor: bare machine, run only on the hardware not need OS 
	type-2 hypervisor : need OS to run - hosted 
	QEMU by itself is a Type-2 hypervisor. It intercepts the instructions meant for Virtual CPU and uses the host operating system to get those instructions executed on the physical CPU. When QEMU uses KVM for hardware acceleration, the combination becomes a Type-1 hypervisor


	KVM: at its essence KVM is just a kernel infrastructure. It's not a product. The developers forked qemu to hook into the KVM kernel infrastructure and take advantage of it. Eventually the fork was merged back into the qemu mainstream.

	qemu: powers nearly all Linux virtualization technologies behind the scenes.

	Qemu is a spectacular piece of software written largely by Fabrice Bellard, a programming genius who also wrote TCC (tiny c compiler), FFMpeg and many other less famous programs.

	Using grep -E "(vmx|svm|0xc0f)" --color=always /proc/cpuinfo to check the cpu support hardware virtualization if your processor does not support hardware virtualization, and you will not be able to use KVM.-

	The hypervisor software has to translate the instructions meant for the Virtual CPU and convert it into instructions for the physical CPU. This translation has a big performance overhead.

	KVM is the Linux kernel module that enables this mapping of physical CPU to Virtual CPU. This mapping provides the hardware acceleration for Virtual Machine and boosts its performance. Moreover, QEMU uses this acceleration when Virt Type is chosen as KVM - instructions meant for the Virtual CPU can be directly executed the physical CPU slice. 
	QEMU uses TCG or Tiny Code Generator to optimally translate and execute the Virtual CPU instructions on the physical CPU
Struct of file config :
	- change path sql connection
	- [keystone_authtoken]
	- config rabbit

Config cinder on multi-node configuration : CONFIG ON COMPUTE 
 	volume_driver=nova.volume.driver.ISCSIDriver
	enabled_apis=ec2,osapi_compute,metadata
	volume_api_class=nova.volume.cinder.API
	iscsi_helper=tgtadm
================================================
Consequently
OpenStack is a cloud operating system that controls large pools of compute, storage, and networking resources throughout a data center
aiming to aid : nhằm hổ trợ
 That being said, it is clear that since all the tools enable infrastructure cloud computing, there is always some overlap in the features that they provide. This overlap tends to be larger for those tools that are closer on the “Cloud Model” axis.
Eucalyptus, CloudStack-Citrix , OpenStack and OpenNebula 
“it depends on what you’re looking for

Different Cloud Models
Enterprise Cloud Model (Datacenter Virtualization): opennebula focous on that 
(Infrastructure Provision): openstack focus


Different Product Views
OpenNebula is a single enterprise-ready open-source product, easy to install and operate, with a single installing and updating process, a one-stop community and a long-term commercial support. Any organization can use the open-source distribution to build a production cloud, and receive best-effort support through the community mailing list. Additionally, any organization can purchase commercial support directly from the developers. The important aspect is that we do not deliver enterprise editions of the software, we commercially support the community software.

On the other hand, OpenStack comprises many subprojects with different levels maturity that require complex integration to achieve a functional cloud infrastructure. A growing number of components and subprojects is making even more difficult their integration and coordination, and the delivery of a single coherent solution. No update path is provided if you want to install a new version, and there is not commercial support. Any organization interested in using OpenStack, and requiring commercial support and enterprise maturity, is recommended (by the vendors running the project) to deploy any of the several enterprise distributions.
Eucalyptus focus compatible AWS
Why I choose the openstack.
The main reason cited for choosing OpenStack is Open Technology and Avoiding Lock-in.


===========================================================
Cloud computing is a computing model, refers to the on-demand delivery of IT resources and applications via the Internet with pay-as-you-go pricing.The cloud mode has 5 essential characteristics , 3 service models and  4 deployment models
 
Essential Characteristics:
On-demand self-service: A user can individually provision computing capabilities, such as server time and network storage and this process need automatically without requiring human interaction.
Broad network access : The availability access over the network and through standard mechanisms such as workstations, mobile phones, tablets and laptops. 
Resource pooling : All of resource are centralize to service for customer. And the tenant can’t know the information about resource. Resource is network, storage, bandwidth, CPU, RAM…
Rapid elasticity: Capabilities can be elastically provisioned and replaced. This characteristics increase the use of resource more flexible. 
Measured service: The cloud need it to manage the service and billing. Beside, cloud automatic control and optimize resource use by leveraging a metering. Resource can be collected , monitored, reported and billing. This ensure the user can pay per use. 
Service Models:
Software as a Service(Saas): The capacity provide to the user is to deployed the application running on the cloud infrastructure. The app can  accessible from client through web interface , API or program interface. The client only work with app and config app setting, not manage the cloud infrastructure include network, storage, service, operating system. 
Platform as a Service (PaaS): The capacity provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming onto the cloud languages, libraries, services, and tools supported. The client does not manage or control the underlying cloud infrastructure like Sass but has control over the deployed applications and possibly configuration settings for the application-hosting environment infrastructure consumer-created. Some of  PaaS is: Heroku, Google App Engine, 
(platform, database,web server, operating system)
Infrastructure as a Service (IaaS): The capacity provided the instance or vitural machine to the consumer. The user can control the image, firewall, storage, balancing traffic, IP address, VLAN and all contain in resource pooling. Some of IaaS is : Amazon EC2, Google Compute Engine, Rackspace Cloud, Windows Azure, Digital Ocean
Deployment Models:
Private cloud
Public cloud : It build to provide the service for anyone on the internet. Whenever you need a resource, you registry at provider and pay-as-you-go pricing.  
Hybrid cloud
